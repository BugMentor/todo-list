# GitLab CI/CD pipeline for Playwright TODOs app
# Stages: start_app -> test -> report -> security -> troubleshoot

stages:
- start_app
- test
- report
- security
- troubleshoot

variables:
  NODE_VERSION: "20"
  REPORTS_DIR: "playwright-report"
  SECURITY_REPORT: "security-report.json"
  NODE_OPTIONS: "--openssl-legacy-provider"
  APP_PORT: "8080"
  APP_URL: "http://todoapp:$APP_PORT"

default:
  image: node:$NODE_VERSION
  before_script:
  - npm ci

# Stage 1: Start the app as a service
start_app:
  stage: start_app
  image: node:$NODE_VERSION
  script:
  - echo "Preparing static app service..."
  # No need to run server here, it will be run as a service
  services:
  - name: node:$NODE_VERSION
    alias: todoapp
    command: [ "sh", "-c", "npm install -g http-server && http-server . -p $APP_PORT -c-1 --silent" ]
  artifacts:
    paths: []
  allow_failure: false

# Stage 2: Run Playwright tests
run_tests:
  stage: test
  image: mcr.microsoft.com/playwright:v1.55.1-focal
  script:
  - echo "Waiting for app to be ready at $APP_URL..."
  - npx wait-on $APP_URL --timeout 300000 --interval 2000 --verbose
  - echo "Running Playwright tests..."
  - npx playwright test --reporter=html,junit --output $REPORTS_DIR
  artifacts:
    paths:
    - $REPORTS_DIR
    expire_in: 1 hour
  needs:
  - start_app

# Stage 3: Publish HTML report
html_report:
  stage: report
  script:
  - echo "Publishing HTML reports..."
  - mkdir -p public
  - cp -r $REPORTS_DIR/* public/
  artifacts:
    paths:
    - public
    reports:
      junit: $REPORTS_DIR/*.xml
    expire_in: 1 hour
  needs:
  - run_tests

# Stage 4: Security scan
security_scan:
  stage: security
  script:
  - echo "Running security scan..."
  - npm audit --json > $SECURITY_REPORT || true
  - cat $SECURITY_REPORT
  artifacts:
    paths:
    - $SECURITY_REPORT
    expire_in: 1 hour
  allow_failure: true

# Stage 5: GitLab Duo troubleshooting
duo_troubleshoot:
  stage: troubleshoot
  image:
    name: registry.gitlab.com/gitlab-org/duo-cli:latest
    entrypoint: [ "" ]
  script:
  - duo chat "Analyze the test failures in this pipeline and suggest potential fixes"
  when: on_failure
  artifacts:
    paths:
    - duo-chat-output.md
    expire_in: 1 hour
